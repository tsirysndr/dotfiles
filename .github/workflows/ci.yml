name: ci

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main
      - uses: tsirysndr/setup-envhub@v1
        with:
          version: v0.2.11
          dotfiles: github:tsirysndr/dotfiles
          options: --backup
        env:
          CLOUDFLARE_ROOT_KEY: ${{ secrets.CLOUDFLARE_ROOT_KEY }}
      - name: Verify dotfiles
        shell: bash -i -e -o pipefail {0}
        run: |
          ls -la ~/.bashrc
          hello
          type nix
          nix --version
          type litecli
          litecli --version
          type glab
          glab --version
          type turso
          turso --version
          type pscale
          pscale version
          type gitleaks
          gitleaks version
          type buf
          buf --version
          type rtx
          rtx --version
          type node
          node --version
          type hello
          type brew
          type fish
          fish --version
          type pkl
          pkl --version
          type snyk
          snyk version
          type syft
          syft version
          type grype
          grype version
          type dhall
          dhall --version
          type trivy
          trivy --version
          type tilt
          tilt version
          type atuin
          atuin --version
          type http
          http --version
          type teller
          teller version
          type deno
          deno --version
          type lvim
          lvim --version
          type git
          git --version
          type gh
          gh --version
          type jq
          jq --version
          type tig
          tig --version
          type zellij
          zellij --version
          type go
          go version
          type zig
          zig version
          type pulumi
          pulumi version
          type gleam
          gleam --version
          type elixir
          elixir --version
          type terraform
          terraform version
          type fzf
          fzf --version
          type bat
          bat --version
          type uv
          uv --version
          type direnv
          direnv --version
          type ruff
          ruff --version
          type vim
          vim --version
          type rg
          rg --version
          type glow
          glow --version
          type skate
          skate --version
          type kubectl
          kubectl version --client
          type docker
          docker --version
          type rye
          rye --version
          type minikube
          minikube version
          type bun
          bun --version
          type tofu
          tofu --version
          type lima
          lima --version
          type wasmer
          wasmer --version
          printenv | grep -q '^CARGO_REGISTRY_TOKEN='
          printenv | grep -q '^CF_AWS_ACCESS_KEY_ID='
          printenv | grep -q '^CF_AWS_SECRET_ACCESS_KEY='
          printenv | grep -q '^CLOUDFLARE_ROOT_KEY='
          printenv | grep -q '^CLOUDFLARE_WORKER_TOKEN='
          printenv | grep -q '^DAGGER_CLOUD_TOKEN='
          printenv | grep -q '^DENO_DEPLOY_TOKEN='
          printenv | grep -q '^HEX_API_KEY='
          printenv | grep -q '^MVOLA_CONSUMER_KEY='
          printenv | grep -q '^MVOLA_CONSUMER_SECRET='
          printenv | grep -q '^NETLIFY_AUTH_TOKEN='
          printenv | grep -q '^PULUMI_ACCESS_TOKEN='
          printenv | grep -q '^SHUTTLE_API_KEY='
          printenv | grep -q '^SONAR_TOKEN='
          printenv | grep -q '^SPIN_AUTH_TOKEN='
          printenv | grep -q '^WASMER_TOKEN='
          envhub status
          rm ~/.envhub/secrets
